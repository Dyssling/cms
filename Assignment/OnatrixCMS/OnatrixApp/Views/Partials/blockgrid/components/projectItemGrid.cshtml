@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
	var parentId = Model.Content.Value<IPublishedContent>("projectItemParent")!.Id;

	var numberOfItems = Model.Content.Value<int>("numberOfItems");
	var style = Model.Content.Value<string>("style");

	var includePagination = Model.Content.Value<bool>("includePagination");

	if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
	{ //Försök hämta page-numret och lagra den i currentPage. Om den misslyckas blir currentPage = 1.
		currentPage = 1;
	}

	var selection = Umbraco.Content(parentId)?
		.ChildrenOfType("projectItem")?
		.Where(x => x.IsVisible());

	var totalItems = selection?.Count() ?? 0;
	IEnumerable<IPublishedContent>? pagedItems = null!;

	if (numberOfItems == 0)
	{
		pagedItems = selection;
	}

	else
	{
		pagedItems = selection?.Skip((currentPage - 1) * numberOfItems).Take(numberOfItems); //Hämta de serviceGridItems som kommer efter föregående sida (alltså skippa dem), och hämta samma mängden som man har ställt in med numberOfItems
	}

	

}

@if (pagedItems != null && style=="Grid style")
{
	<div class="projects-grid">
		@foreach (var item in pagedItems)
		{
			var thumbnailUrl = item.Value<IPublishedContent>("thumbnail")!.Url();
			var date = item.Value<string>("date");
            var category = item.Value<string>("category");

			<a class="grid-container" href="@item.Url()">
				<div class="img-container">
					<img src="@thumbnailUrl" alt="Project image">
				</div>
                <div class="project-content bg-primary">
                    <h6>@item.Name</h6>
                    <p>@category</p>
                    <i class="fa-solid fa-chevron-right"></i>
                </div>
			</a>
		}
	</div>
}

@if (pagedItems != null && style == "List style")
{
	<div class="projects-list">
		@foreach (var item in pagedItems)
		{
			var thumbnailUrl = item.Value<IPublishedContent>("thumbnail")!.Url();
			var date = item.Value<string>("date");
			var intro = item.Value<string>("shortIntroText");

			<div class="project-container">
				<img src="@thumbnailUrl" alt="Project image">
				<div class="project-content">
					<h5>@item.Name</h5>
					<div class="date">
						<i class="fa-regular fa-calendar-days"></i>
						<p>@date</p>
					</div>
					<p class="project-text">@intro</p>
					<a href="@item.Url()">Read more <i class="fa-solid fa-arrow-right"></i></a>
				</div>
			</div>
		}
	</div>
}

@if (pagedItems != null && includePagination)
{
	<div class="pagination">
		@if (currentPage > 1)
		{
			<a class="btn prev-next" href="?page=@(currentPage - 1)">Prev</a>
		}

		else
		{
			<a class="btn prev-next none">Prev</a>
		}

		@for (int i = 1; i <= Math.Ceiling((decimal)totalItems / numberOfItems); i++)
		{
			<a class="btn number@((i == currentPage) ? " active" : "")" href="?page=@i">@i</a>
		}

		@if (currentPage < (Math.Ceiling((decimal)totalItems / numberOfItems)))
		{
			<a class="btn prev-next" href="?page=@(currentPage + 1)">Next</a>
		}

		else
		{
			<a class="btn prev-next none">Next</a>
		}
	</div>
}