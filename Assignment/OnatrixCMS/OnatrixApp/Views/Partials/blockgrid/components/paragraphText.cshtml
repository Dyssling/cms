@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
    var fontSize = Model.Content.Value<string>("fontSize")!;

    switch (fontSize)
    {
        case "Standard":
            fontSize = "";
            break;
        case "Large":
            fontSize = " large-p";
            break;
        case "Small":
            fontSize = " small-p";
            break;
    }

    var fontWeight = Model.Content.Value<string>("fontWeight")!;

    switch (fontWeight)
    {
        case "Standard":
            fontWeight = "";
            break;
        case "Thick":
            fontWeight = " thick-p";
            break;
    }

    var italic = Model.Content.Value<bool>("italic");
    var isCentered = Model.Content.Value<bool>("alignToCenter");
    var topMargin = Model.Content.Value<bool>("addTopMargin");
    var bottomMargin = Model.Content.Value<bool>("addBottomMargin");
    var content = Model.Content.Value<string>("content");

    var classString = $"{(isCentered ? "center-text" : "")}{(italic ? " italic" : "")}{(topMargin ? " margin-top-p" : "")}{(bottomMargin ? " margin-bottom-p" : "")}{fontSize}{fontWeight}";

    classString = classString.Trim();
}

<p class="@classString">
    @content
</p>