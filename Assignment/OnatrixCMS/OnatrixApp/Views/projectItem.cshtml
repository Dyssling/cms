@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ProjectItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper;

@{

    Layout = "mainLayout.cshtml";

    ViewBag.Title = Model.Name;

    var ancestor = Model.Ancestor();
    var selection = Umbraco.Content(ancestor.Id)
    .ChildrenOfType("projectItem")
    .Where(x => x.IsVisible())
    .Take(4);

    var tags = Model.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockListItem>>("tags") ?? null;

    var articleDate = Model.Value<string>("date");
}
	<section class="page-top bg-gray">
		<h1>@Model.Name</h1>
        @await Html.PartialAsync("partials/static/breadcrumbs.cshtml")
	</section>
	<section class="article-section">
		<div class="container">
			<article class="border-right">
                <div class="date">
                    <i class="fa-regular fa-calendar-days"></i>
                    <p>@articleDate</p>
                </div>
				@await Html.GetBlockGridHtmlAsync(Model.Content)
                @if (tags != null){
                    <div class="article-tags">
                        <p>Tags:</p>
                        @foreach (var tag in tags){
                            var tagValue = tag.Content.Value<string>("item");
                            <a class="btn btn-secondary" href="#">@tagValue</a>
                        }
                    </div>
                }
			</article>
            <aside class="sidebar">
                <h5>Recent projects</h5>
                <div class="recent-projects-list">
                    @foreach (var item in selection){
                        var thumbnailUrl = item.Value<IPublishedContent>("thumbnail")!.Url();
                        var date = item.Value<string>("date");
                        
                        <a class="recent-project-container" href="item.Url()">
                            <img src="@thumbnailUrl" alt="@item.Name">
                            <div class="recent-project-content">
                                <p class="recent-project-title">@item.Name</p>
                                <div class="date">
                                    <i class="fa-regular fa-calendar-days"></i>
                                    <p>@date</p>
                                </div>
                            </div>
                        </a>
                    }
                </div>
                <h5>Tags</h5>
                <button class="btn tag-btn">Report</button>
                <button class="btn tag-btn">Business plans</button>
                <button class="btn tag-btn">Insights</button>
                <button class="btn tag-btn">Business</button>
                <button class="btn tag-btn">App</button>
                <button class="btn tag-btn">Project</button>
                <button class="btn tag-btn">Finance</button>
                <button class="btn tag-btn">Pricing</button>
                @using (Html.BeginUmbracoForm("HandleSupportBoxSubmit", "Form", FormMethod.Post))
                {
                    var supportBoxEmailValue = ViewData["SupportBoxEmailValue"] ?? "";
                    var supportBoxEmailError = ViewData["SupportBoxEmailError"];

                    <div class="support-box bg-primary">
                        <h5>How can we help you?</h5>
                        <p class="support-text">online support 24/7, we are here to help you</p>
                        <div class="input-container">
                            <input type="email" id="supportBoxEmail" name="supportBoxEmail" placeholder="Email address" value="@supportBoxEmailValue">
                            <button type="submit" class="btn" formnovalidate="formnovalidate"><i class="fa-regular fa-envelope"></i></button>
                        </div>
                        @if (supportBoxEmailError != null)
                        {
                            <p class="form-error-msg">@ViewData["SupportBoxEmailError"]</p>
                        }
                        @if (ViewData["SupportBoxSuccessMessage"] != null)
                        {
                            <p class="form-success-msg">@ViewData["SupportBoxSuccessMessage"]</p>
                        }
                    </div>
                }
			</aside>
		</div>
	</section>
    <section class="contact-info-section bg-gray">
        @await Html.PartialAsync("partials/static/contactInfo.cshtml")
    </section>